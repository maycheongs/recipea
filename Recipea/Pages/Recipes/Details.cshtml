@page "{id:int}"
@model Recipea.Pages.Recipes.DetailsModel
@{
    ViewData["Title"] = Model.Recipe.Title;
}

<div class="container-fluid p-4">
    <div class="row">
        <!-- Recipe Image -->
        <div class="col-md-3 mb-4">
            <img src="@(Model.Recipe.ImageUrl ?? "https://via.placeholder.com/300x300")" 
                 alt="@Model.Recipe.Title" 
                 class="img-fluid rounded shadow" 
                 style="width: 100%; object-fit: cover; max-height: 300px;" />
        </div>

        <!-- Recipe Info -->
        <div class="col-md-9">
            <h1 class="mb-3">@Model.Recipe.Title</h1>
            
            <!-- Source, Times -->
            <div class="mb-3 text-muted">
                @if (!string.IsNullOrEmpty(Model.Recipe.Source))
                {
                    <span class="me-3">
                        <strong>Source:</strong> @Model.Recipe.Source
                    </span>
                }
                @if (!string.IsNullOrEmpty(Model.Recipe.ActiveTime))
                {
                    <span class="me-3"><strong>Active Time:</strong> @Model.Recipe.ActiveTime</span>
                }
                @if (!string.IsNullOrEmpty(Model.Recipe.TotalTime))
                {
                    <span><strong>Total Time:</strong> @Model.Recipe.TotalTime</span>
                }
            </div>

            <!-- Description -->
            @if (!string.IsNullOrEmpty(Model.Recipe.Description))
            {
                <p class="lead">@Model.Recipe.Description</p>
            }

            <hr class="my-4" />

            <!-- Tabs for Ingredients and Instructions -->
            <ul class="nav nav-tabs" id="recipeTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients" type="button" role="tab">
                        <i class="bi bi-card-checklist me-2"></i>Ingredients
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="instructions-tab" data-bs-toggle="tab" data-bs-target="#instructions" type="button" role="tab">
                        <i class="bi bi-list-ol me-2"></i>Instructions
                    </button>
                </li>
            </ul>

            <div class="tab-content border border-top-0 p-4" id="recipeTabContent">
                <!-- Ingredients Tab -->
                <div class="tab-pane fade show active" id="ingredients" role="tabpanel">
                    @if (!string.IsNullOrEmpty(Model.Recipe.Ingredients))
                    {
                        <ul class="list-unstyled">
                            @foreach (var ingredient in Model.Recipe.Ingredients.Split('\n', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <li class="mb-2">
                                    <i class="bi bi-dot text-success"></i>
                                    @ingredient.Trim()
                                </li>
                            }
                        </ul>
                        
                        <div class="mt-4">
                            <a href="javascript:void(0)" class="text-primary" id="scaleLink">
                                <small>1× scale (click to change)</small>
                            </a>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No ingredients listed.</p>
                    }
                </div>

                <!-- Instructions Tab -->
                <div class="tab-pane fade" id="instructions" role="tabpanel">
                    @if (!string.IsNullOrEmpty(Model.Recipe.Instructions))
                    {
                        <ol class="instructions-list">
                            @foreach (var instruction in Model.Recipe.Instructions.Split('\n', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <li class="mb-3">@instruction.Trim()</li>
                            }
                        </ol>
                    }
                    else
                    {
                        <p class="text-muted">No instructions provided.</p>
                    }
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="mt-4">
                <a asp-page="./Edit" asp-route-id="@Model.Recipe.Id" class="btn btn-warning me-2">
                    <i class="bi bi-pencil me-1"></i>Edit
                </a>
                <a asp-page="./Delete" asp-route-id="@Model.Recipe.Id" class="btn btn-danger me-2">
                    <i class="bi bi-trash me-1"></i>Delete
                </a>
                <a asp-page="./Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-1"></i>Back to List
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Simple scale functionality placeholder
        document.getElementById('scaleLink')?.addEventListener('click', function(e) {
            e.preventDefault();
            const scales = ['0.5×', '1×', '2×', '3×'];
            const currentText = this.querySelector('small').textContent;
            const currentScale = currentText.match(/[\d.]+×/)[0];
            const currentIndex = scales.indexOf(currentScale);
            const nextIndex = (currentIndex + 1) % scales.length;
            const nextScale = scales[nextIndex];
            this.querySelector('small').textContent = `${nextScale} scale (click to change)`;
        });
    </script>
}
